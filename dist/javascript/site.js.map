{"version":3,"sources":["../../javascript/site.js"],"names":[],"mappings":"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","file":"site.js","sourcesContent":["var canvas,\r\n\t$canvas,\r\n\tctx,\r\n\tfontLoaded = $.Deferred(),\r\n\tcanvasLoaded = $.Deferred();\r\n\r\n\r\nvar dragIndex;\r\nvar dragging;\r\nvar mouseX;\r\nvar mouseY;\r\nvar dragHoldX;\r\nvar dragHoldY;\r\nvar backgrounds = [];\r\n\r\n// $(init);\r\n\r\nfunction init() {\r\n    $canvas = $(\"#cnvs\");\r\n    canvas = $canvas.get(0);\r\n    ctx = canvas.getContext(\"2d\");\r\n\r\n    ctx.mozImageSmoothingEnabled = false;\r\n    ctx.imageSmoothingEnabled = false;\r\n\r\n    metrics();\r\n\r\n    canvas.addEventListener(\"mousedown\", mouseDownListener, false);\r\n\r\n    canvasLoaded.resolve();\r\n}\r\n\r\nfunction metrics() {\r\n    const width = window.innerWidth;\r\n\tconst height = window.innerHeight;\r\n\r\n    canvas.width = width;\r\n    canvas.height = height;\r\n    $canvas.css({\r\n    \twidth: width + 'px',\r\n    \theight: height + 'px'\r\n    });\r\n    console.log(\"width: \" + width);\r\n    console.log(\"height: \" + height);\r\n}\r\n\r\n\r\n$.when(fontLoaded, canvasLoaded).done(makeScene);\r\n\r\nvar control;\r\nvar timer;\r\nvar easeAmount = 0.2;\r\n\r\n//We are going to pay attention to the layering order of the objects so that if a mouse down occurs over more than object,\r\n//only the topmost one will be dragged.\r\nfunction mouseDownListener(evt) {\r\n    var highestIndex = -1;\r\n\r\n    //getting mouse position correctly, being mindful of resizing that may have occured in the browser:\r\n    var bRect = canvas.getBoundingClientRect();\r\n    mouseX = (evt.clientX - bRect.left)*(canvas.width/bRect.width);\r\n    mouseY = (evt.clientY - bRect.top)*(canvas.height/bRect.height);\r\n\r\n    //find which shape was clicked\r\n    if (control.hitTest(mouseX, mouseY)) {\r\n        dragging = true;\r\n\r\n        //We will pay attention to the point on the object where the mouse is \"holding\" the object:\r\n        dragHoldX = mouseX - control.x;\r\n        dragHoldY = mouseY - control.y;\r\n\r\n        targetX = mouseX - dragHoldX;\r\n        targetY = mouseY - dragHoldY;\r\n            \r\n        //start timer\r\n        timer = setInterval(onTimerTick, 1000/30);\r\n    }\r\n\r\n    if (dragging) {\r\n        window.addEventListener(\"mousemove\", mouseMoveListener, false);\r\n    }\r\n\r\n    canvas.removeEventListener(\"mousedown\", mouseDownListener, false);\r\n    window.addEventListener(\"mouseup\", mouseUpListener, false);\r\n        \r\n    //code below prevents the mouse down from having an effect on the main browser window:\r\n    if (evt.preventDefault) {\r\n        evt.preventDefault();\r\n    } //standard\r\n    else if (evt.returnValue) {\r\n        evt.returnValue = false;\r\n    } //older IE\r\n    return false;\r\n}\r\n\r\nfunction onTimerTick() {\r\n    /*\r\n    Because of reordering, the dragging shape is the last one in the array.\r\n    The code below moves this shape only a portion of the distance towards the current \"target\" position, and \r\n    because this code is being executed inside a function called by a timer, the object will continue to\r\n    move closer and closer to the target position.\r\n    The amount to move towards the target position is set in the parameter 'easeAmount', which should range between\r\n    0 and 1. The target position is set by the mouse position as it is dragging.        \r\n    */\r\n    control.x = control.x + easeAmount*(targetX - control.x);\r\n    control.y = control.y + easeAmount*(targetY - control.y);\r\n    \r\n    //stop the timer when the target position is reached (close enough)\r\n    if ((!dragging) && (Math.abs(control.x - targetX) < 0.1) && (Math.abs(control.y - targetY) < 0.1)) {\r\n        control.x = targetX;\r\n        control.y = targetY;\r\n        //stop timer:\r\n        clearInterval(timer);\r\n    }\r\n\r\n    drawScene();\r\n}\r\n\r\n\r\nfunction mouseUpListener(evt) {\r\n    canvas.addEventListener(\"mousedown\", mouseDownListener, false);\r\n    window.removeEventListener(\"mouseup\", mouseUpListener, false);\r\n    if (dragging) {\r\n        dragging = false;\r\n        window.removeEventListener(\"mousemove\", mouseMoveListener, false);\r\n    }\r\n}\r\n\r\nfunction mouseMoveListener(evt) {\r\n    var posX;\r\n    // var posY;\r\n    var rad = control.radius;\r\n\r\n    //Control can move around in the middle half of the canvas\r\n    var minX = canvas.width / 4 + rad;\r\n    var maxX = (canvas.width * 3 / 4) - rad;\r\n    // var minY = rad;\r\n    // var maxY = canvas.height - rad;\r\n    //getting mouse position correctly \r\n    var bRect = canvas.getBoundingClientRect();\r\n    mouseX = (evt.clientX - bRect.left)*(canvas.width/bRect.width);\r\n    // mouseY = (evt.clientY - bRect.top)*(canvas.height/bRect.height);\r\n    \r\n    //clamp x and y positions to prevent object from dragging outside of canvas\r\n    posX = mouseX - dragHoldX;\r\n    posX = (posX < minX) ? minX : ((posX > maxX) ? maxX : posX);\r\n    // posY = mouseY - dragHoldY;\r\n    // posY = (posY < minY) ? minY : ((posY > maxY) ? maxY : posY);\r\n\r\n    targetX = posX;\r\n    // targetY = posY;\r\n    \r\n    // drawScene();\r\n}\r\n\r\nfunction drawText() {\r\n\tctx.font = \"100 132px Raleway\";\r\n\tctx.fillStyle = \"white\";\r\n\tctx.textAlign = \"center\";\r\n\tctx.fillText(\"BLISS ON TAP\", canvas.width/2, canvas.height/3)\r\n}\r\n\r\n\r\n\r\nfunction makeScene() {\r\n    control = new Control(canvas.width / 2, canvas.height / 10);\r\n\r\n\t// var scene = new THREE.Scene();\r\n\t// camera = new THREE.PerspectiveCamera( 75, canvas.width / canvas.height, 0.1, 1000 );\r\n\t// var renderer;\r\n\r\n\t// if (canvas.getContext(\"webgl\") || canvas.getContext(\"experimental-webgl\"))\r\n\t\t// renderer = new THREE.WebGLRenderer({ canvas: canvas });\r\n\t// else\r\n\t\t// renderer = new THREE.CanvasRenderer({ canvas: canvas });\r\n\r\n\t// renderer.setSize( canvas.width, canvas.height );\r\n\r\n\t// scene.add(camera);\r\n// /\tscene.add(MasterObject);\r\n\r\n\t// camera.position.z = 25;\r\n\r\n\tfunction render() {\r\n\t\trequestAnimationFrame( render );\r\n\t\t// renderer.render( scene, camera );\r\n        drawScene();\r\n\t}\r\n\t// render();\r\n\r\n    setupBackgrounds();\r\n\r\n    drawScene();\r\n}\r\n\r\nfunction drawScene() {\r\n    //bg\r\n    ctx.fillStyle = \"#9DE0AD\";\r\n    ctx.fillRect(0,0,canvas.width,canvas.height);\r\n    control.drawToContext(ctx);\r\n\r\n    drawText();\r\n\r\n    for (var i = 0; i < backgrounds.length; i++) {\r\n        for (var j = 0; j < backgrounds[i].Positions.length; j++) {\r\n            drawBackground(backgrounds[i], backgrounds[i].Positions[j]);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n//Backgrounds area scaled assuming a 1000 by 1000 px area\r\nfunction setupBackgrounds() {\r\n\tvar BackgroundList = [\r\n\t{\r\n\t\tpositions: [new Point3D(0, 0, 0)],\r\n\t\tsprite: [\r\n\t\t\tnew Point(0 - 500, 1000),\r\n\t\t\tnew Point(550, 350),\r\n\t\t\tnew Point(650, 450),\r\n\t\t\tnew Point(750, 425),\r\n\t\t\tnew Point(1500, 1000)\r\n\t\t],\r\n\t\tcolor: new RGBA(109, 199, 163, 1)\r\n\t},\r\n\t{\r\n\t\tpositions: [new Point3D(0, 0, 0)],\r\n\t\tsprite: [\r\n\t\t\tnew Point(0 - 500, 1000),\r\n\t\t\tnew Point(200, 300),\r\n\t\t\tnew Point(500, 600),\r\n\t\t\tnew Point(750, 500),\r\n\t\t\tnew Point(1500, 1000)\r\n\t\t],\r\n\t\tcolor: new RGBA(89,186,165, 1)\r\n\t},\r\n\t{\r\n\t\tpositions: [new Point3D(0, 0, 0)],\r\n\t\tsprite: [\r\n\t\t\tnew Point(0 - 500, 1000),\r\n\t\t\tnew Point(500, 500),\r\n\t\t\tnew Point(700, 700),\r\n\t\t\tnew Point(850, 650),\r\n\t\t\tnew Point(1500, 1000)\r\n\t\t],\r\n\t\tcolor: new RGBA(69,173,168, 1)\r\n\t},\r\n\r\n\r\n\t// {\r\n //        positions: [new Point3D(40,8.5,-2)],\r\n //        sprite: [new Point(-500,1e3), new Point(-37,5), new Point(-30,-55), new Point(-15,-60), new Point(0,0), new Point(20,-20), new Point(40,3), new Point(46,40), new Point(300,1e3)],\r\n //        // color: landCols[1]\r\n //    },\r\n    // {\r\n    //     positions: [new Point3D(0,-1.5,-2), new Point3D(0,-14.5,-2)],\r\n    //     sprite: [new Point(-1500,200), new Point(-1e3,0), new Point(-700,50), new Point(30,-90), new Point(200,0), new Point(390,-20), new Point(1100,100), new Point(1500,300)],\r\n    //     // color: landCols[1]\r\n    // },\r\n    // {\r\n    //     positions: [new Point3D(40,8.2,-5)],\r\n    //     sprite: [new Point(-50,1e3), new Point(-45,30), new Point(-35,40), new Point(-15,-5), new Point(0,-40), new Point(45,-27), new Point(60,25), new Point(68,20), new Point(75,60), new Point(120,100), new Point(300,120), new Point(300,1e3)],\r\n    //     // color: landCols[2]\r\n    // },\r\n    // {\r\n    //     positions: [new Point3D(0,-1,-6), new Point3D(0,-14,-6)],\r\n    //     sprite: [new Point(-1500,200), new Point(-1e3,0), new Point(-700,50), new Point(-100,-120), new Point(50,20), new Point(330,-20), new Point(1100,100), new Point(1500,300)],\r\n    //     // color: landCols[2]\r\n    // },\r\n    // {\r\n    //     positions: [new Point3D(0,-1,-12), new Point3D(0,-14,-12)],\r\n    //     sprite: [new Point(-1500,200), new Point(-1e3,0), new Point(-700,30), new Point(20,-10), new Point(150,-50), new Point(350,-20), new Point(650,30), new Point(850,10), new Point(1500,300)],\r\n    //     // color: landCols[3]\r\n    // },\r\n    // {\r\n    //     positions: [new Point3D(0,-1,-18), new Point3D(0,-14,-18)],\r\n    //     sprite: [new Point(-1500,200), new Point(-9e3,10), new Point(-700,50), new Point(-550,-20), new Point(-450,15), new Point(50,-100), new Point(90,-70), new Point(410,-15), new Point(550,-20), new Point(1100,100), new Point(1500,300)],\r\n    //     // color: landCols[4]\r\n    // }\r\n    ];\r\n\r\n    for (var i = 0; i < BackgroundList.length; i++) {\r\n        var background = createBackground(BackgroundList[i]);\r\n        backgrounds.push(background);\r\n    }\r\n}\r\n\r\nfunction createBackground(background) {\r\n    return new Background(background.positions,new Sprite(background.sprite),background.color);\r\n}\r\n\r\n\r\nfunction Background(pos, sprite, color) {\r\n    // this.ThreeObject = obj || MasterObject;\r\n    this.Positions = pos || [new Point];\r\n    this.Sprite = sprite || new Sprite;\r\n    this.Color = color || new RGBA(Math.round(255 * Math.random()),Math.round(255 * Math.random()),Math.round(255 * Math.random()),1);\r\n}\r\n\r\n\r\n\r\nfunction drawBackground(background, startPos) {\r\n    var points = background.Sprite.Points;\r\n    var startX = startPos.x;\r\n    var startY = startPos.y;\r\n\r\n    ctx.beginPath();\r\n\r\n    //Scale to 1000x1000px size\r\n    var scale = new Point(canvas.width / 1000, canvas.height / 1000);\r\n\r\n    ctx.moveTo(startX + points[0].x * scale.x, startY + points[0].y * scale.y);\r\n\r\n    for (var a = 1; a < points.length; a++) {\r\n        ctx.lineTo(startX + points[a].x * scale.x, startY + points[a].y * scale.y);\r\n    }\r\n\r\n    ctx.lineTo(startX + 1500 * scale.x, startY + 1500 * scale.y);\r\n    ctx.lineTo(startX - 1500 * scale.x, startY + 1500 * scale.y);\r\n\r\n    ctx.closePath();\r\n\r\n    ctx.fillStyle = background.Color.toString();\r\n\r\n    ctx.fill();\r\n}\r\n"]}